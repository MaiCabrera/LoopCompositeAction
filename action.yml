---
name: 'Read file & Store env with mulitple strings'
description: 'Pretends to copy some files and return the number of files copied'
# inputs:
#   destinationFolder:  # path
#     description: 'The folder to copy the files to'
#     required: true
#     default: '~'
# outputs:
#   copied-files: 
#     description: "N"
#     value: ${{ steps.random-number-generator.outputs.filesNo }}
runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v2
    - name: echo-metadata-of-gitHub-action-run
      run: |
        echo "Home: ${HOME}"
        echo "GITHUB_WORKFLOW: ${GITHUB_WORKFLOW}"
        echo "GITHUB_ACTIONS: ${GITHUB_ACTIONS}"
        echo "GITHUB_ACTOR: ${GITHUB_ACTOR}"
        echo "GITHUB_REPOSITORY: ${GITHUB_REPOSITORY}"
        echo "GITHUB_EVENT_NAME: ${GITHUB_EVENT_NAME}"
        echo "GITHUB_WORKSPACE: ${GITHUB_WORKSPACE}"
        echo "GITHUB_SHA: ${GITHUB_SHA}"
        echo "GITHUB_REF: ${GITHUB_REF}"
        echo "GITHUB_RUN_ID: ${GITHUB_RUN_ID}"
      shell: bash


#   destinationFolder:  # id of input
#     description: 'This folder path reads the input for the bash script to create a env with multiple vars'
#     required: true
#     default: '~'
# outputs:
#   copied_envs:
#     description: "custom env output to use index ref for input use"
#     value: ${{ steps.number-of-strings-read.outputs.$envVAr }}


# runs:
#   using: "composite"
#   steps:
#     - run: echo File Path to Read ${{ inputs.destinationFolder }}.
#       shell: bash
#     - id: number-of-strings-read
#       run: ${{ github.action_path }}/extract.sh
#       shell: bash
#     - run: echo "::set-output ::$(echo $envVAr)"
#       shell: bash          
#     - run: extract.sh
#       shell: bash

      # - name: AWS Lambda Deploy
      # - uses: appleboy/lambda-action@master
      #   with:
      #     aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws_region: ${{ secrets.AWS_REGION }}
      #     function_name: echo "${i}"
      #     source: /tests/echo "${i}"
